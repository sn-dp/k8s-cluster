---
- name: Determine host user
  local_action: command whoami
  become: false
  register: host_user

- name: "Create additional user {{host_user.stdout}}"
  shell:
    cmd: |
      kubeadm alpha kubeconfig user --client-name {{ host_user.stdout }} > {{kubeconfig_path}}{{host_user.stdout}}.conf
    creates: "{{kubeconfig_path}}{{host_user.stdout}}.conf"

- name: Get an existing Service object
  k8s_info:
    api_version: v1
    kind: ClusterRoleBinding
    name: "{{host_user.stdout}}-cluster-admin"
    field_selectors:
      - resources
  register: user_cluster_admin

- name: "Provide necessary permission for {{host_user.stdout}}"
  shell: "kubectl --kubeconfig {{kubeadmin_config}} create clusterrolebinding {{host_user.stdout}}-cluster-admin --clusterrole={{additional_user.cluster_role}} --user={{host_user.stdout}}"
  when: (user_cluster_admin.resources|length == 0)

- name: "Copy {{host_user.stdout}} to host machine ~/.kube/configs"
  fetch:
    src: "{{kubeconfig_path}}{{host_user.stdout}}.conf"
    dest: "/Users/{{host_user.stdout}}/.kube/configs/{{host_user.stdout}}.conf"
    flat: true
  when: additional_user.copy_to_host
